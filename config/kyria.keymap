/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ORANG   3
#define BLUE    4

&left_encoder { resolution = <2>; };
// &right_encoder { resolution = <1>; };

&mt {
    tapping-term-ms = <135>;
};

&lt {
    tapping-term-ms = <135>;
};

&spi1 {
	compatible = "nordic,nrf-spim";
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "WS2812";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <11>; /* arbitrary; change at will */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};


/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans &trans &trans    &lt RAISE L &kp LBKT &kp RBKT                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans &trans &trans    &lt LOWER W &kp E &kp LSHFT                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans &trans &trans    &kp R &kp T &kp LA(N1) &kp LGUI &kp LS(LGUI)                &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	              &trans    &lt ORANG Q &kp Z &kp LALT &kp S                         &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp N5 N6>;
		};
        lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans &trans &trans    &kp N &kp V &kp P                                                &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans &trans &trans    &trans &kp F &kp Y                                                &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans &trans &trans    &kp M &trans &kp LA(N1) &trans &trans                &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	              &trans    &trans &kp Y &trans &kp A                 &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp LC(LBKT) LC(RBKT)>;
		};
		raise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans &trans &trans    &trans &kp X &kp U                                                 &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans &trans &trans    &kp K &kp G &kp Z                                                 &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans &trans &trans    &kp SEMICOLON &trans &kp LA(N1) &kp PERIOD &kp O              &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	              &trans    &kp H &kp C &kp COMMA &kp D                                   &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp LC(LBKT) LC(RBKT)>;
		};
		orang_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans &trans &trans    &kp DOWN_ARROW &kp UP_ARROW &kp LC(UP_ARROW)                                                 &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans &trans &trans    &kp LEFT_ARROW &kp RIGHT_ARROW &kp C_PLAY_PAUSE                                                 &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans &trans &trans    &trans &trans &mo BLUE &trans &trans                           &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	              &trans    &trans &trans &trans &trans                                   &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
		};
		blue_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  M | R    | LGUI |  E |  R |  T |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  L | X    |  W   | N2 | N3 |  H |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | MO1| EPTOG|  Q   |  Y |  A |  V | C | D |               | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | N0|  S | LSHIFT |LALT| F |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&trans &trans &trans    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2                                                 &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSLH
	&trans &trans &trans    &rgb_ug RGB_HUI &rgb_ug RGB_SAD &trans                                                    &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
	&trans &trans &trans    &rgb_ug RGB_HUD &rgb_ug RGB_SAI &trans &rgb_ug RGB_BRI &bt BT_CLR                         &kp LSHFT &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	              &trans                      &trans &trans &rgb_ug RGB_BRD &ext_power EP_TOG                                           &kp RET  &kp SPACE  &kp TAB &kp BSPC &kp RALT
			>;

			sensor-bindings = <&inc_dec_kp N5 N6>;
		};
	};
};

